{
	"info": {
		"_postman_id": "ed771129-74d5-43f7-9d2a-346ac65ad55c",
		"name": "ms-hw-7 local",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5562917"
	},
	"item": [
		{
			"name": "/auth - Signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData= pm.response.json();\r",
							"console.log(\"accountId is \" + jsonData.accountId);\r",
							"if(typeof jsonData.accountId !== \"undefined\") {\r",
							"pm.collectionVariables.set(\"accountId\", jsonData.accountId);\r",
							"}\r",
							"\r",
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"  let rand1 = Math.random() * 100000;\r",
							"  rand1 = Math.floor(rand1);\r",
							"  console.log('Index1' + rand1);\r",
							"  pm.collectionVariables.set(\"index1\", rand1);\r",
							"\r",
							"  let rand2 = Math.random() * 100000;\r",
							"  rand2 = Math.floor(rand2);\r",
							"  console.log('Index2' + rand2);\r",
							"  pm.collectionVariables.set(\"index2\", rand2);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"email\": \"new{{index1}}@new.ru\",\r\n        \"password\": \"new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8087/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8087",
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "/auth - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData= pm.response.json();\r",
							"console.log(\"token is \" + jsonData.token);\r",
							"if(typeof jsonData.token !== \"undefined\") {\r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"}\r",
							"\r",
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"email\": \"new{{index1}}@new.ru\",\r\n        \"password\": \"new\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8087/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8087",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/warehouse/items Get Warehouse Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let eTagHeader = pm.response.headers.get('ETag');\r",
							"console.log('Response ETag Header: ' + eTagHeader);\r",
							"pm.collectionVariables.set(\"etag\", eTagHeader);\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8085/warehouse/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"warehouse",
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "/order/ Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))\r",
							"pm.collectionVariables.set(\"order1Uuid\", ''+jsonResponseData.orderUuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "If-Match",
						"value": "{{etag}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"itemUuid\": \"{{item1Uuid}}\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"{{item2Uuid}}\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"{{item3Uuid}}\",\r\n            \"quantity\": 10\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/order/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"order",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/order/Get Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "If-Match",
						"value": "{{etag}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"itemUuid\": \"7981a5ad-d6c2-4f52-b821-6680b9f2c09c\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"c9ecb61a-0f70-427f-844a-9fa41e65391f\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"e558a3ac-e020-44c4-b6a2-90089285a344\",\r\n            \"quantity\": 10\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/order/{{order1Uuid}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"order",
						"{{order1Uuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/order/ Unsuccessful Attempt to create Order with same Etag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))\r",
							"pm.collectionVariables.set(\"order1Uuid\", ''+jsonResponseData.orderUuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "If-Match",
						"value": "{{etag}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"itemUuid\": \"{{item1Uuid}}\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"{{item2Uuid}}\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"{{item3Uuid}}\",\r\n            \"quantity\": 10\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/order/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"order",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/warehouse/items Get Warehouse Items - new ETag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let eTagHeader = pm.response.headers.get('ETag');\r",
							"console.log('Response ETag Header: ' + eTagHeader);\r",
							"pm.collectionVariables.set(\"etag\", eTagHeader);\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8085/warehouse/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"warehouse",
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "/order/ Successful creation an Order with new Etag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonRequestData= pm.request.body.raw;\r",
							"console.log\r",
							"console.log('Request: ' + jsonRequestData)\r",
							"\r",
							"let jsonResponseData= pm.response.json();\r",
							"console.log\r",
							"console.log('Response: ' + JSON.stringify(jsonResponseData))\r",
							"pm.collectionVariables.set(\"order1Uuid\", ''+jsonResponseData.orderUuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "If-Match",
						"value": "{{etag}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"items\": [\r\n        {\r\n            \"itemUuid\": \"{{item1Uuid}}\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"{{item2Uuid}}\",\r\n            \"quantity\": 10\r\n        },\r\n        {\r\n            \"itemUuid\": \"{{item3Uuid}}\",\r\n            \"quantity\": 10\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/order/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"order",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accountId",
			"value": "initial",
			"type": "string"
		},
		{
			"key": "index1",
			"value": ""
		},
		{
			"key": "index2",
			"value": ""
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "etag",
			"value": "",
			"type": "string"
		},
		{
			"key": "item1Uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "item2Uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "item3Uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "order1Uuid",
			"value": "",
			"type": "string"
		}
	]
}